{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Users","useState","users","setUsers","useHttpClient","error","clearError","sendRequest","isLoading","useEffect","a","responseData","console","log","fetchUsers","ErrorModal","onClear","LoadingSpinner"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,+MCSEC,G,MAZA,SAAAJ,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,QCoBpCE,G,MAvBE,SAACV,GAChB,OACE,wBAAIC,UAAU,aACZ,kBAACF,EAAA,EAAD,CAAME,UAAU,sBACd,kBAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,YACN,yBAAKX,UAAU,oBACb,kBAAC,EAAD,CACEK,MAAK,UAAKO,yCAAL,YAAwCb,EAAMM,OACnDC,IAAKP,EAAMc,QAGf,yBAAKb,UAAU,mBACb,4BAAKD,EAAMc,MACX,4BACGd,EAAMe,WADT,IAC2C,IAArBf,EAAMe,WAAmB,QAAU,gBCQtDC,G,MAxBG,SAAChB,GACjB,OAA2B,IAAvBA,EAAMiB,MAAMC,OAEZ,yBAAKjB,UAAU,UACb,gDAMJ,wBAAIA,UAAU,cACXD,EAAMiB,MAAME,KAAI,SAACC,GAAD,OACf,kBAAC,EAAD,CACEC,IAAKD,EAAKR,GACVA,GAAIQ,EAAKR,GACTN,MAAOc,EAAKd,MACZQ,KAAMM,EAAKN,KACXC,WAAYK,EAAKE,OAAOJ,eCkBnBK,UAjCD,WACZ,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAAsDC,cAA9CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,YAAaC,EAAxC,EAAwCA,UAiBxC,OAfAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAEYH,EACzBjB,oDAHa,OAETqB,EAFS,OAMfR,EAASQ,EAAaT,OANP,gDAQfU,QAAQC,IAAR,MARe,yDAAH,qDAWhBC,KACC,CAACP,IAGF,kBAAC,WAAD,KACE,kBAACQ,EAAA,EAAD,CAAYV,MAAOA,EAAOW,QAASV,IAClCE,GACC,yBAAK9B,UAAU,UACb,kBAACuC,EAAA,EAAD,QAGFT,GAAaN,GAAS,kBAAC,EAAD,CAAWR,MAAOQ,IAP5C","file":"static/js/8.4cd5ca39.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport \"./UserItem.css\";\n\nconst UserItem = (props) => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar\n              image={`${process.env.REACT_APP_URL_ASSET}/${props.image}`}\n              alt={props.name}\n            />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from \"react\";\n\nimport UserItem from \"./UserItem\";\nimport \"./UsersList.css\";\n\nconst UsersList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <h2>No users found.</h2>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map((user) => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default UsersList;\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\n\r\nimport UsersList from \"../components/UsersList\";\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState();\r\n\r\n  const { error, clearError, sendRequest, isLoading } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_URL_BACKEND + \"/users\"\r\n        );\r\n\r\n        setUsers(responseData.users);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && users && <UsersList items={users} />};\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}